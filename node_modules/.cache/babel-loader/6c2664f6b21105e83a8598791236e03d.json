{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/phanuwitkittirong/Downloads/react-redux-application-forked/src/pages/PostsPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { fetchPosts } from '../actions/postsActions';\nimport { Post } from '../components/Post';\nvar PostsPage = function PostsPage(_ref) {\n  var dispatch = _ref.dispatch;\n  var getPosts = useSelector(function (state) {\n    return state.posts;\n  });\n  useEffect(function () {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  useEffect(function () {\n    console.log('getPosts', getPosts);\n  }, [getPosts]);\n\n  // const renderPosts = () => {\n  //   if (getPosts.loading) return <p>Loading posts...</p>\n  //   if (getPosts.hasErrors) return <p>Unable to display posts.</p>\n\n  //   return getPosts.post.map((post) => <Post key={post.id} post={post} excerpt />)\n  // }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Posts\"));\n};\n\n// const mapStateToProps = () => ({})\n\nexport default connect()(PostsPage);","map":{"version":3,"names":["React","useEffect","connect","useSelector","fetchPosts","Post","PostsPage","dispatch","getPosts","state","posts","console","log"],"sources":["/Users/phanuwitkittirong/Downloads/react-redux-application-forked/src/pages/PostsPage.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { connect, useSelector } from 'react-redux'\n\nimport { fetchPosts } from '../actions/postsActions'\n\nimport { Post } from '../components/Post'\n\nconst PostsPage = ({ dispatch }) => {\n  const getPosts = useSelector((state) => state.posts)\n\n  useEffect(() => {\n    dispatch(fetchPosts())\n  }, [dispatch])\n\n  useEffect(() => {\n    console.log('getPosts', getPosts)\n  }, [getPosts])\n\n  // const renderPosts = () => {\n  //   if (getPosts.loading) return <p>Loading posts...</p>\n  //   if (getPosts.hasErrors) return <p>Unable to display posts.</p>\n\n  //   return getPosts.post.map((post) => <Post key={post.id} post={post} excerpt />)\n  // }\n\n  return (\n    <section>\n      <h1>Posts</h1>\n      {/* {renderPosts()} */}\n    </section>\n  )\n}\n\n// const mapStateToProps = () => ({})\n\nexport default connect()(PostsPage)\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAElD,SAASC,UAAU,QAAQ,yBAAyB;AAEpD,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAC3B,IAAMC,QAAQ,GAAGL,WAAW,CAAC,UAACM,KAAK;IAAA,OAAKA,KAAK,CAACC,KAAK;EAAA,EAAC;EAEpDT,SAAS,CAAC,YAAM;IACdM,QAAQ,CAACH,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEdN,SAAS,CAAC,YAAM;IACdU,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EACnC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;;EAEA;EACA;;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAc,CAEN;AAEd,CAAC;;AAED;;AAEA,eAAeN,OAAO,EAAE,CAACI,SAAS,CAAC"},"metadata":{},"sourceType":"module"}